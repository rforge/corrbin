{
    "contents" : "\\documentclass[reqno]{amsart}\n\\usepackage[margin=1in]{geometry}\n\\usepackage[colorlinks=true,linkcolor=blue]{hyperref}\n\\renewcommand{\\NWtarget}[2]{\\hypertarget{#1}{#2}}\n\\renewcommand{\\NWlink}[2]{\\hyperlink{#1}{#2}}\n\n\\newcommand{\\pvec}{\\mathbf{p}}\n\\def\\T{{ \\mathrm{\\scriptscriptstyle T} }}\n\\newcommand{\\setJ}{\\mathcal{J}}\n\\newtheorem{theorem}{Theorem}\n\n\n\\title{Test for trend with a multinomial outcome}\n\\author{Aniko Szabo}\n\\date{\\today}\n\n\\begin{document}\n\\maketitle\n\n\n\\section{Introduction}\n-\nConsider a study in which a multinomial outcome with $K$ possible unordered values is measured in subjects belonging to one of $G$ ordered groups.\nThe size of each group, $n_{i\\cdot}$, is defined by the study design, and will be treated as fixed.\nLet $\\pvec_i=(p_{i1},\\ldots,p_{iK})^\\T$ denote the probabilities of the multinomial outcomes in the $i$th group. The hypothesis of interest is to\nevaluate the homogeneity of these probabilities across the groups with a targeted alternative of a trend in at least one of the categories.\nFormally, we consider testing $H_0 = \\bigcap_{j=1}^K H_{0j}$ versus $H_1 = \\bigcup_{j=1}^K H_{1j}$, where\n\\begin{equation}\n\\begin{aligned}\n  H_{0j}& :  p_{1j}=\\cdots = p_{Gj} \\\\\n  H_{1j}& : p_{1j} \\leq \\cdots \\leq p_{Gj} \\text{ or }  p_{1j} \\geq \\cdots \\geq p_{Gj} \\text{ with at least one inequality}\n\\end{aligned}\n\\end{equation}\n\nThe test is based on the following result:\n\\begin{theorem}\\label{Th:partial}\nLet $\\setJ \\subset \\{1,\\ldots,K\\}$, then under $H_{0\\setJ}=\\bigcap_{j\\in\\setJ}H_{0j}$ as $N\\rightarrow\\infty$\n\\begin{equation}\n  W_\\setJ =  \\sum_{j\\in\\setJ} (1-p_{\\cdot j})T^2_j + \\big(\\sum_{j\\in\\setJ} p_{\\cdot j}\\big) T^2_\\setJ \\xrightarrow{d} \\chi^2_{d},\n\\end{equation}\nwhere $d = \\min(|\\setJ|, K-1)$,  $T_\\setJ = [\\sum_{i=1}^G \\sum_{j\\in\\setJ}n_{ij}(c_i-\\bar{c})] \\big/ \\sqrt{p_{\\cdot \\setJ}(1-p_{\\cdot \\setJ})s^2}$ denotes the Cochran-Armitage trend test statistic for testing for marginal trend in $p_{i\\setJ}=\\sum_{j\\in\\setJ}p_{ij}$, $i=1,\\ldots, G$.\n\\end{theorem}\n\n\\section{Implementing the overall test}\n\nThe main \\texttt{multiCA.test} function is a generic, with methods for a matrix and formula input.\n\n@o ../R/aaa-generics.R\n@{\n#'Multinomial Cochran-Armitage trend test\n#'\n#'The \\code{multiCA.test} performs a multinomial generalization of the \n#' Cochran-Armitage trend test.\n#'\n#'\n#'@@export\n#'@@param x a two-dimensional matrix or a formula\n#'@@param \\dots other arguments \n#'@@return an object of class \"htest\" with the results of the test\n#'@@author Aniko Szabo\n#'@@references Szabo, A. (2016) Test for trend with a multinomial outcome.  \n#'@@keywords nonparametric \n#'@@examples\n#'\n#'data(stroke)\n#'## using formula interface\n#'multiCA.test(Type ~ Year, weights=Freq, data=stroke)\n#'\n#'## using matrix interface\n#'strk.mat <- xtabs(Freq ~ Type + Year, data=stroke)\n#'multiCA.test(strk.mat)\n#'\n#'@@name multiCA.test\n\nmultiCA.test <- function(x,...) UseMethod(\"multiCA.test\")\n \n@}\n\nThe default method uses a two-dimensional contingency matrix with the outcomes as rows and ordered groups as columns.\n@O ../R/multiCA.R @{\n#'@@rdname multiCA.test\n#'@@method multiCA.test default\n#'@@param scores numeric vector of the same length as the number of ordered groups. Defaults to linearly increasing values\n#'@@param outcomes integer or character vector defining the set of outcomes (by row index or row name) over which the trend should be tested. Defaults to all outcomes.\n#'@@export\n\nmultiCA.test.default <- function(x, scores=1:ncol(x), outcomes=1:nrow(x),\n...){\n  if (!is.matrix(x)) {\n    cat(str(x))\n    stop(\"x should be a two-dimensional matrix\")\n}\n  if (length(scores) != ncol(x)) stop(\"The length of the score vector should equal the number of columns of x\")\n\n  K <- nrow(x)\n  full <- length(outcomes) == K  #full test\n  \n  nidot <- apply(x, 2, sum)\n  n <- sum(nidot)\n  \n  cbar <- sum(nidot * scores)/n\n  \n  s2 <- sum(nidot * (scores - cbar)^2)\n  pdot <- prop.table(rowSums(x))[outcomes]\n  nonz <- (pdot > 0)\n  \n  if (!any(nonz)) return(1)\n  \n  X <- x[outcomes, ,drop=FALSE] %*% (scores - cbar)\n  \n  if (full || sum(pdot) >= 1){\n    Tt <- ( sum(X[nonz]^2 / pdot[nonz])) / s2\n  } else {\n    Tt <- (sum(X)^2 / (1-sum(pdot)) + sum(X[nonz]^2 / pdot[nonz])) / s2\n  }\n  names(Tt) <- \"W\"\n\n  df <- length(outcomes) - full\n  names(df) <- \"df\"\n  p.value <- pchisq(Tt, df=df, lower.tail=FALSE)\n\n  res <- list(statistic = Tt, parameter = df, p.value = p.value, \n              method=\"Multinomial Cochran-Armitage trend test\",\n              data.name = deparse(substitute(x)))\n  class(res) <- \"htest\"\n  return(res)  \n}\n@| multiCA.test.default@}\n\n\nThe formula interface converts data into the appropriate contingency matrix for use\nwith the default method.\n\n@O ../R/multiCA.R @{\n#'@@rdname multiCA.test\n#'@@method multiCA.test formula\n#'@@param formula a formula of the form \\code{outcome ~ group} where \\code{outcome} is a factor representing the cateogrical outcome and \\code{group} is the grouping variableover which the trend is tested.\n#'@@param data  an optional matrix or data frame containing the variables in the formula \\code{formula}. By default the variables are taken from \\code{environment(formula).}\n#'@@param subset\tan optional vector specifying a subset of observations to be used.\n#'@@param na.action\ta function which indicates what should happen when the data contain NAs. Defaults to getOption(\"na.action\").\n#'@@param weights an integer-valued variable representing the number of times each \\code{outcome} - \\code{group} combination was observed.\n#'@@export\n\nmultiCA.test.formula <- function(formula, data, subset, na.action,  weights, ...){\n    if (missing(formula) || (length(formula) != 3L) || (length(attr(terms(formula[-2L]), \n        \"term.labels\")) != 1L)) \n        stop(\"'formula' missing or incorrect\")\n    m <- match.call(expand.dots = FALSE)\n    if (is.matrix(eval(m$data, parent.frame()))) \n        m$data <- as.data.frame(data)\n    m[[1L]] <- quote(stats::model.frame)\n    m$... <- NULL\n    mf <- eval(m, parent.frame())\n    responsevar <- attr(attr(mf, \"terms\"), \"response\")\n    response <- mf[[responsevar]]\n    weightvar <- which(names(mf)==\"(weights)\")\n    w <- if(length(weightvar) > 0)  mf[[weightvar]] else rep(1L, nrow(mf))\n    g <- factor(mf[,-c(responsevar, weightvar)])\n\n    tab <- xtabs(w ~ response + g)\n    multiCA.test(tab, ...)\n}\n@| multiCA.test.formula@}\n\n\\section{Files}\n\n@f\n\n\\section{Macros}\n\n@m\n\n\\section{Identifiers}\n\n@u\n\n\\end{document}\n",
    "created" : 1461860273674.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2933588150",
    "id" : "A1B84B78",
    "lastKnownWriteTime" : 1461873368,
    "path" : "C:/RForge/multiCA/nuweb/multiCA.w",
    "project_path" : "nuweb/multiCA.w",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "text"
}